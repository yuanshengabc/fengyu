<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
<!--
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License. See accompanying LICENSE file.
-->

<!-- Put site-specific property overrides in this file. -->

<configuration>
        <!--指定hdfs的nameservice为ns，需要和core-site.xml中的保持一致 -->
    <property>
        <name>dfs.nameservices</name>
        <value>ns</value>
    </property>
    <!-- ns下面有两个NameNode，分别是nn1，nn2 -->
    <property>
        <name>dfs.ha.namenodes.ns</name>
        <value>nn1,nn2</value>
    </property>
   {% for h in groups['hadoop'] %}
   {%- if (hostvars[h].is_namenode1 is defined and hostvars[h].is_namenode1) %}
    <property>
        <name>dfs.namenode.rpc-address.ns.nn1</name>
        <value>{{hostvars[h]['ansible_default_ipv4']['address']}}:9000</value>
    </property>
    <property>
        <name>dfs.namenode.http-address.ns.nn1</name>
        <value>{{hostvars[h]['ansible_default_ipv4']['address']}}:50070</value>
    </property>
    {% endif %}

    {%- if (hostvars[h].is_namenode2 is defined and hostvars[h].is_namenode2) %}
    <property>
        <name>dfs.namenode.rpc-address.ns.nn2</name>
        <value>{{hostvars[h]['ansible_default_ipv4']['address']}}:9000</value>
    </property>
    <property>
        <name>dfs.namenode.http-address.ns.nn2</name>
        <value>{{hostvars[h]['ansible_default_ipv4']['address']}}:50070</value>
    </property>
    {% endif %}

    {% endfor %}
    <!-- 指定NameNode的元数据在JournalNode上的存放位置 -->
    <property>
        <name>dfs.namenode.shared.edits.dir</name>
	<value>qjournal://{{journalnode_edit_dirs}}/ns</value>
    </property>
    <!-- 指定JournalNode在本地磁盘存放数据的位置 -->
    <property>
        <name>dfs.journalnode.edits.dir</name>
	<value>{{hdfs_journalnode_data_path}}</value>
    </property>

    <!-- 开启NameNode故障时自动切换 -->
    <property>
        <name>dfs.ha.automatic-failover.enabled</name>
        <value>true</value>
    </property>
    <!-- 配置失败自动切换实现方式 -->
    <property>
        <name>dfs.client.failover.proxy.provider.ns</name>
        <value>org.apache.hadoop.hdfs.server.namenode.ha.ConfiguredFailoverProxyProvider</value>
    </property>
    <!-- 配置隔离机制 -->
    <property>
        <name>dfs.ha.fencing.methods</name>
        <value>sshfence</value>
    </property>
    <!-- 使用隔离机制时需要ssh免登陆 -->
    <property>
        <name>dfs.ha.fencing.ssh.private-key-files</name>
        <value>~/.ssh/id_rsa</value>
    </property>

	   <!-- 在NN和DN上开启WebHDFS (REST API)功能,不是必须 -->
    <property>
        <name>dfs.webhdfs.enabled</name>
        <value>true</value>
    </property>
    <property>
        <name>dfs.permissions</name>
        <value>false</value>
    </property>
    <property>
        <name>dfs.replication</name>
        <value>3</value>
    </property>

	<property>
	     <name>dfs.namenode.name.dir</name>
		<value>{{hdfs_namenode_data_path_file}}</value>
	</property>
	<property>
		<name>dfs.http.address</name>
		<value>{{dfs_http_address}}</value>
       </property>
	<property><name>dfs.blocksize</name>
		<value>268435456</value>
	</property>
	<property>
		<name>dfs.namednode.handler.count</name>
		<value>100</value>
	</property>
	<property>
		<name>dfs.datanode.data.dir</name>
		<value>{{hdfs_datanode_data_path_file}}</value>
	</property>
</configuration>
